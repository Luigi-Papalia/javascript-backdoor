name: DAST with OWASP ZAP

on:
  repository_dispatch:
    types: [dast-zap]

permissions:
  contents: write
  issues: write

jobs:
  build-deploy-zap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          cni: bridge
          container-runtime: docker
          cpus: 2
          memory: 4096m
          start-args: '--wait=apiserver'

      - name: Build Docker image in Minikube
        run: |
          eval $(minikube -p minikube docker-env)
          docker build -t microservizio-js:v1 .
          docker images

      - name: Deploy to Minikube
        run: |
          kubectl apply -f microservizio-js-deployment.yaml
          kubectl rollout status deployment/microservizio-js --timeout=120s

      - name: Debug - Pod and Service status
        run: |
          kubectl get pods -o wide
          kubectl get svc
          kubectl describe svc microservizio-js-service
          kubectl describe $(kubectl get pods -o name | grep microservizio-js | head -n1)

      - name: Start port-forward in background
        run: |
          kubectl port-forward svc/microservizio-js-service 8080:3000 > port-forward.log 2>&1 &
          for i in {1..15}; do
            if nc -z localhost 8080; then
              echo "Port-forward is ready."
              break
            fi
            echo "Waiting for port-forward to be ready..."
            sleep 2
          done
          if ! nc -z localhost 8080; then
            echo "Port-forward did not become ready in time."
            cat port-forward.log
            exit 1
          fi

      - name: Wait for service to be available
        run: |
          for i in {1..15}; do
            if curl -s http://localhost:8080 >/dev/null; then
              echo "Service is up!"
              exit 0
            fi
            echo "Waiting for service to be available..."
            sleep 2
          done
          echo "Service did not become available in time." >&2
          cat port-forward.log
          exit 1

      - name: Run OWASP ZAP Full Scan
        id: zap_scan
        continue-on-error: true
        run: |
          docker run --rm --network=host \
            -v $(pwd):/zap/wrk:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-full-scan.py -t http://localhost:8080 -a -r zap_report.html
          echo "ZAP_EXIT_CODE=$?" >> $GITHUB_ENV

      - name: Create GitHub Issue if Vulnerabilities Found
        if: env.ZAP_EXIT_CODE != '0'
        run: |
          BODY=$(cat zap_report.html | base64)
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"title\":\"ZAP Security Issues Detected\",\"body\":\"ZAP Full Scan detected vulnerabilities on the microservice. See attached report (base64-encoded):\n\n$BODY\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues

      - name: Cleanup
        if: always()
        run: |
          kubectl delete -f microservizio-js-deployment.yaml || true
