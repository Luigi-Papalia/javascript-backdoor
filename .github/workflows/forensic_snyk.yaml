name: SCA + Forensic Logging + Splunk HEC

on:
  workflow_dispatch:

permissions:
  security-events: write

env:
  SPLUNK_HEC_ENDPOINT: "https://192.168.1.131:8088/services/collector"
  SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}

jobs:
  snyk:
    runs-on: self-hosted

    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Forensic snapshot
        run: |
          mkdir -p forensic
          uname -a > forensic/os.txt
          npm ls --all > forensic/npm-packages.txt
          env > forensic/env.txt
          find . -type f -exec sha256sum {} \; > forensic/checksums.txt
        shell: bash

      - name: Upload forensic snapshot
        uses: actions/upload-artifact@v4
        with:
          name: forensic-snapshot-${{ github.run_id }}
          path: forensic/

      - name: Install dependencies
        run: |
          echo "=== npm install $(date --iso-8601=seconds) ===" | tee workflow.log
          npm install 2>&1 | tee -a workflow.log

      - name: Upload install logs
        uses: actions/upload-artifact@v4
        with:
          name: npm-install-log-${{ github.run_id }}
          path: workflow.log

      - name: Run Snyk SCA and output SARIF (and log)
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload SARIF
        uses: actions/upload-artifact@v4
        with:
          name: snyk-sarif-${{ github.run_id }}
          path: snyk.sarif

      - name: Upload SARIF to GitHub (Code Scanning)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Forward metadata (JSON) to Splunk HEC
        run: |
          # Build a small JSON payload with key GitHub context + forensic summary
          jq -n --arg run_id "$GITHUB_RUN_ID" \
                --arg repo    "$GITHUB_REPOSITORY" \
                --arg actor   "$GITHUB_ACTOR" \
                --arg commit  "$GITHUB_SHA" \
                --arg ref     "$GITHUB_REF" \
                --arg time "$(date +%s)" \
            '{
               event: {
                 run_id: $run_id,
                 repository: $repo,
                 actor: $actor,
                 commit: $commit,
                 ref: $ref,
                 timestamp: $time
               },
               sourcetype: "github:actions:snyk"
             }' \
          | gzip | \
          curl -k "$SPLUNK_HEC_ENDPOINT/services/collector/event" \
            -H "Authorization: Splunk $SPLUNK_HEC_TOKEN" \
            -H "Content-Type: application/json" \
            -H "Content-Encoding: gzip" \
            --data-binary @-
