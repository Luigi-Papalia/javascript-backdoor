on:
  workflow_dispatch:

name: Publish Image (With Falco)

permissions:
  packages: write
  contents: read
  actions: read

jobs:
  publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Start Falco
      run: |
        docker run --rm -d \
          --name falco \
          --privileged \
          -v /tmp:/tmp \
          -v /var/run/docker.sock:/host/var/run/docker.sock \
          -v /proc:/host/proc:ro \
          -v /etc:/host/etc:ro \
          -v ${{ github.workspace }}:/javascript:rw \
          -v ${{ github.workspace }}/falco_rules/custom_rules.yaml:/etc/falco/rules.d/custom_rules.yaml \
          falcosecurity/falco:latest falco -o "json_output=true" -o "file_output.enabled=true" -o "file_output.keep_alive=false" -o "file_output.filename=/tmp/falco_events.json" -o "engine.kind=modern_ebpf" -o base_syscalls.all=true

        for i in {1..30}; do
          if docker ps --filter "name=falco" --filter "status=running" | grep -q falco; then
            echo "Falco is running!!!!!!!!!"
            break
          fi
          echo "Waiting...."
          sleep 1
        done
        
    - name: Start Sysdig
      run: |      
        docker run --rm -d --name sysdig --privileged \
          -v /var/run/docker.sock:/host/var/run/docker.sock \
          -v /dev:/host/dev -v /proc:/host/proc:ro \
          -v /boot:/host/boot:ro \
          -v /lib/modules:/host/lib/modules:ro \
          -v /home/garou/sandbox/javascript:/javascript:rw \
          -v /usr:/host/usr:ro \
          -v /tmp:/tmp \
          --net=host sysdig/sysdig:latest sysdig --modern-bpf -w /tmp/capture.scap --snaplen=256 "not evt.type in (switch)"

        for i in {1..30}; do
          if docker ps --filter "name=sysdig" --filter "status=running" | grep -q sysdig; then
            echo "Sysdig is running!!!!!!!!!"
            break
          fi
          echo "Waiting...."
          sleep 1
        done

    - name: Publish the image
      run: |
         [[ -f /tmp/falco_events.json ]] && cat /tmp/falco_events.json 
    #    npm install
    #    echo "stopping containers"
    #    docker stop falco
    #    docker stop sysdig

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

    - name: Build and Push Docker image
      run: |
        OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
        docker build -t ghcr.io/${OWNER}/vulnerable-app:latest .
        docker push ghcr.io/${OWNER}/vulnerable-app:latest

    - name: Stop Containers
      run: |
        echo "Stopping Falco and Sysdig"
        docker stop falco
        docker stop sysdig
    
    - name: Create SARIF
      run: |
        python ${{ github.workspace }}/utility/generate_sarif.py /tmp/falco_events.json falco.sarif
    
    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: falco.sarif
